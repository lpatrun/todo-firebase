{"version":3,"sources":["modules/todos-module/components/Todos/models/TodoTableItem.module.css","modules/todos-module/components/Todos/TodoList.module.css","modules/HomePage/HomePage.module.css","modules/todos-module/components/Todos/models/FormComponent.module.css","modules/todos-module/components/SingleTodo/SingleTodo.module.css","modules/ErrorPage/ErrorPage.module.css","modules/auth/components/SignIn/SignIn.module.css","modules/auth/components/SignUp/SignUp.module.css","modules/auth/components/Logout/LogoutPage.module.css","modules/Navigation/NavigationComponent.tsx","modules/ErrorPage/ErrorPage.tsx","modules/HomePage/HomePage.tsx","firebase.ts","modules/todos-module/redux/todoActions.ts","modules/auth/redux/userActions.ts","store/actions/index.ts","modules/auth/components/SignIn/SignIn.tsx","modules/auth/components/SignUp/SignUp.tsx","modules/auth/components/Logout/LogoutPage.tsx","modules/todos-module/components/Todos/models/FormComponent.tsx","modules/todos-module/components/Todos/models/TodoTableItem.tsx","modules/todos-module/components/Todos/TodoList.tsx","modules/todos-module/components/SingleTodo/SingleTodo.tsx","modules/Routes/RoutesComponent.tsx","App.tsx","serviceWorker.ts","modules/todos-module/redux/todoReducer.ts","modules/auth/redux/userReducer.ts","store/reducers/index.ts","store/Store.ts","index.tsx"],"names":["module","exports","NavigationComponent","isAuth","useSelector","state","userReducer","isAuthenticated","className","exact","to","Fragment","ErrorPage","classes","errorPageStyling","goHomeBtn","routeProps","path","component","name","HomePage","homePageStyling","buttonsContainer","signInBtn","signUpBtn","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","d","Date","authStart","email","password","type","allActions","todoActions","deleteTodo","id","collection","doc","delete","addTodo","title","description","data","getDate","getMonth","getFullYear","completed","add","saveChanges","set","setTodos","todos","fetchTodosFailed","userActions","validAuth","logout","authSuccess","authData","authFail","error","authenticate","dispatch","SignIn","history","useHistory","useDispatch","useState","setEmail","setPassword","signInPageStyling","onSubmit","e","preventDefault","push","placeholder","value","onChange","target","minLength","SignUp","signUpPageStyling","required","LogoutPage","logoutPageStyling","onClick","FormComponent","setTitle","setDescription","addTodoForm","formInput","formButton","TodoTableItem","props","editMode","setEditMode","rowStyling","inputStyling","todo","btnStyling","btnEdit","completedStyling","btnDelete","TodoList","useEffect","onSnapshot","snapshot","todosData","forEach","todoReducer","selectfilter","setSelectFilter","inputFilter","setInputFilter","fn","filterFn","setFilterFn","sortFilter","setSortFilter","handleFiltering","iFil","sFil","filter","toLowerCase","includes","trim","todosAfterFilteringAndSorting","sortFunction","array","sort","a","b","firstDate","split","reverse","join","secondDate","center","heder","formStyle","singleInput","selStyle","selectorStyle","tableClass","tableHead","dateSort","length","map","key","colSpan","SingleTodo","todo_id","useParams","find","singleTodo","RoutesComponent","App","Boolean","window","location","hostname","match","initialState","todosReducer","action","console","log","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a54845cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowStyling\":\"TodoTableItem_rowStyling__1L5dL\",\"btnStyling\":\"TodoTableItem_btnStyling__FyOYX\",\"btnEdit\":\"TodoTableItem_btnEdit__Cmj6k\",\"btnDelete\":\"TodoTableItem_btnDelete__ZeMR1\",\"inputStyling\":\"TodoTableItem_inputStyling__zS_8A\",\"completedStyling\":\"TodoTableItem_completedStyling__s3PYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heder\":\"TodoList_heder__1pxTP\",\"center\":\"TodoList_center__1vmFI\",\"tableClass\":\"TodoList_tableClass__v1eB3\",\"tableHead\":\"TodoList_tableHead__3xgnZ\",\"selStyle\":\"TodoList_selStyle__2Qk7B\",\"selectorStyle\":\"TodoList_selectorStyle__1C_Wk\",\"formStyle\":\"TodoList_formStyle__1vkM2\",\"singleInput\":\"TodoList_singleInput__3f9ky\",\"dateSort\":\"TodoList_dateSort__3aaCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageStyling\":\"HomePage_homePageStyling__2EEG4\",\"buttonsContainer\":\"HomePage_buttonsContainer__VuEnM\",\"signInBtn\":\"HomePage_signInBtn__1vjJE\",\"signUpBtn\":\"HomePage_signUpBtn__1eCrZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTodoForm\":\"FormComponent_addTodoForm__B0yeG\",\"formInput\":\"FormComponent_formInput__3o0ar\",\"formButton\":\"FormComponent_formButton__20aJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"singleTodo\":\"SingleTodo_singleTodo__3ch_0\",\"goHomeBtn\":\"SingleTodo_goHomeBtn__25JaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPageStyling\":\"ErrorPage_errorPageStyling__84EOK\",\"goHomeBtn\":\"ErrorPage_goHomeBtn__2cdL1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signInPageStyling\":\"SignIn_signInPageStyling__1U3QT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signUpPageStyling\":\"SignUp_signUpPageStyling__3SQNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutPageStyling\":\"LogoutPage_logoutPageStyling__2amjx\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { RootReducer } from '../../store/reducers';\n\nconst NavigationComponent = () => {\n  const isAuth: boolean = useSelector<RootReducer, boolean>(\n    (state) => state.userReducer.isAuthenticated\n  );\n\n  return (\n    <nav className=\"navigetion\">\n      <div>\n        <NavLink exact to=\"/\">\n          Todo home\n        </NavLink>\n      </div>\n      <div>\n        {!isAuth && (\n          <React.Fragment>\n            <NavLink to=\"/signin\">Sign In</NavLink>\n            <NavLink to=\"/signup\">Sign Up</NavLink>\n          </React.Fragment>\n        )}\n\n        {isAuth && (\n          <React.Fragment>\n            <NavLink to=\"/todos\">Todos</NavLink>\n            <NavLink to=\"/logout\">Logout</NavLink>\n          </React.Fragment>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default NavigationComponent;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classes from './ErrorPage.module.css';\n\nfunction ErrorPage() {\n  return (\n    <div className={classes.errorPageStyling}>\n      <h1>Oops, there is nothing here!</h1>\n      <p>If you dont mind, press this button to go back home</p>\n      <Link to=\"/\">\n        <button className={classes.goHomeBtn}>Go home</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '*',\n    component: ErrorPage,\n  },\n  name: ErrorPage,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { RootReducer } from '../../store/reducers';\nimport classes from './HomePage.module.css';\n\nfunction HomePage() {\n  const isAuth: boolean = useSelector<RootReducer, boolean>(\n    (state) => state.userReducer.isAuthenticated\n  );\n\n  return (\n    <div className={classes.homePageStyling}>\n      <h1>Welcome home</h1>\n\n      {isAuth ? (\n        <p>Click on Todos to see your tasks</p>\n      ) : (\n        <>\n          <p>To continue, please Sign in or Sign up</p>\n          <div className={classes.buttonsContainer}>\n            <Link to=\"/signin\">\n              <button className={classes.signInBtn}>Sign In</button>\n            </Link>\n            <Link to=\"/signup\">\n              <button className={classes.signUpBtn}>Sign Up</button>\n            </Link>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '/',\n    component: HomePage,\n  },\n  name: HomePage,\n};\n","import firebase from 'firebase/app';\nimport 'firebase/firestore'; \n\nconst config = {\n  apiKey: \"AIzaSyAIg1BKZ2SR4AVMkbVjcrodDZfajMgoCWc\",\n  authDomain: \"react-todo-2095c.firebaseapp.com\",\n  databaseURL: \"https://react-todo-2095c.firebaseio.com\",\n  projectId: \"react-todo-2095c\",\n  storageBucket: \"react-todo-2095c.appspot.com\",\n  messagingSenderId: \"553106365833\",\n  appId: \"1:553106365833:web:3ff46a8d1a79700d849558\",\n  measurementId: \"G-74GTF4N6G3\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import { Todo } from \"./todoReducer\";\nimport firebase from '../../../firebase';\n\nconst db = firebase.firestore()\n\nconst deleteTodo = (id: string) => {\n  return () => db.collection('todos').doc(id).delete();\n};\n\nconst saveChanges = (id: string, title: string, description: string, doc: string, completed: boolean) => {\n  return () => { db.collection('todos').doc(id).set({ id, title, description, doc, completed }); }\n};\n\nconst d = new Date();\n\nconst getDate = (): string => {\n  return `${d.getDate()}.${d.getMonth() + 1}.${d.getFullYear()}.`;\n};\n\nconst addTodo = (title: string, description: string) => {\n\n  return () => {\n\n    const data: Todo = {\n      id: '',\n      title,\n      description,\n      doc: getDate(),\n      completed: false\n    }\n    db.collection('todos').add(data)\n  }\n};\n\nconst setTodos = (todos: Todo[]) => {\n  return {\n    type: 'SET_TODOS',\n    todos\n  }\n}\n\nconst fetchTodosFailed = () => {\n  return {\n    type: 'FETCH_TODOS_FAILED'\n  }\n}\n\nexport default {\n  deleteTodo,\n  addTodo,\n  saveChanges,\n  setTodos,\n  fetchTodosFailed\n};\n\n\n/* import { Todo } from \"./todoReducer\";\nimport firebase from '../../../firebase';\n\nconst db = firebase.firestore()\n\nconst deleteTodo = (id: string) => {\n  db.collection('todos').doc(id).delete();\n\n  return {\n     type: 'DELETE_TODO',\n     id,\n   };\n};\n\nconst saveChanges = (id: string, title: string, description: string, doc: string, completed: boolean) => {\n\n  return () => { db.collection('todos').doc(id).set({ id, title, description, doc, completed }); }\n\n  return {\n    type: 'SAVE_CHANGES',\n    id,\n    title,\n    description,\n  };\n};\n\nconst toggleCompletion = (id: string) => {\n  return {\n    type: 'TOGGLE_COMPLETION',\n    id,\n  };\n};\n\nconst d = new Date();\n\nconst getDate = (): string => {\n  return `${d.getDate()}.${d.getMonth() + 1}.${d.getFullYear()}.`;\n};\n\nconst addTodo = (title: string, description: string) => {\n\n  return () => {\n\n    const data: Todo = {\n      id: '',\n      title,\n      description,\n      doc: getDate(),\n      completed: false\n    }\n    db.collection('todos').add(data)\n  }\n};\n\nconst setTodos = (todos: Todo[]) => {\n  return {\n    type: 'SET_TODOS',\n    todos\n  }\n}\n\nconst fetchTodosFailed = () => {\n  return {\n    type: 'FETCH_TODOS_FAILED'\n  }\n}\n\nexport default {\n  deleteTodo,\n  addTodo,\n  saveChanges,\n  toggleCompletion,\n  setTodos,\n  fetchTodosFailed\n};\n\n*/","const validAuth = () => {\n  return {\n    type: 'VALID_AUTH',\n  };\n};\n\nconst logout = () => {\n  return {\n    type: 'LOGOUT',\n  };\n};\n\nconst authStart = (email: string, password: string) => {\n  return {\n    type: 'AUTH_START',\n    email,\n    password\n  }\n}\nconst authSuccess = (authData: any) => {\n  return {\n    type: 'AUTH_SUCCESS',\n    authData\n  }\n}\nconst authFail = (error: any) => {\n  return {\n    type: 'AUTH_FAIL',\n    error\n  }\n}\n\nconst authenticate = (email: string, password: string) => {\n  return (dispatch: (arg0: { type: string; }) => void) => {\n    dispatch(authStart(email, password));\n  }\n}\n\nexport default {\n  validAuth,\n  logout,\n  authStart,\n  authSuccess,\n  authFail,\n  authenticate\n};\n","import todoActions from '../../modules/todos-module/redux/todoActions';\nimport userActions from '../../modules/auth/redux/userActions';\n\nconst allActions = {\n  todoActions,\n  userActions,\n};\n\nexport default allActions;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport allActions from '../../../../store/actions';\nimport classes from './SignIn.module.css';\n\nfunction SignIn() {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const handleSignIn = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(allActions.userActions.validAuth());\n    dispatch(allActions.userActions.authenticate(email, password))\n    history.push('/');\n  };\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <div className={classes.signInPageStyling}>\n      <p>*hint no need to actually sign in, just type in email address and min of 6 letters in password field</p>\n      <form onSubmit={handleSignIn}>\n        <p>Username</p>\n        <input\n          type=\"email\"\n          placeholder=\"Email...\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n\n        />\n        <p>Password</p>\n        <input\n          type=\"password\"\n          placeholder=\"Pasword...\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          minLength={6}\n          \n        />\n        <button type=\"submit\">Sign in</button>\n      </form>\n    </div>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '/signin',\n    component: SignIn,\n  },\n  name: SignIn,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport allActions from '../../../../store/actions';\nimport classes from './SignUp.module.css';\n\nfunction SignUp() {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const handleSignUp = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(allActions.userActions.validAuth());\n    history.push('/');\n  };\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <div className={classes.signUpPageStyling}>\n      <p>*hint no need to actually sign up, just type in email address and min of 6 letters in password field</p>\n      <form onSubmit={handleSignUp}>\n        <p>Username</p>\n        <input\n          type=\"email\"\n          placeholder=\"Your email...\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <p>Password</p>\n        <input\n          type=\"password\"\n          placeholder=\"Select pasword...\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          minLength={6}\n          required\n        />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '/signup',\n    component: SignUp,\n  },\n  name: SignUp,\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport allActions from '../../../../store/actions/index';\nimport classes from './LogoutPage.module.css';\n\nfunction LogoutPage() {\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(allActions.userActions.logout());\n    history.push('/');\n  };\n\n  return (\n    <div className={classes.logoutPageStyling}>\n      <h1>Click button to logout</h1>\n      <button onClick={handleLogout}>Logout</button>\n    </div>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '/logout',\n    component: LogoutPage,\n  },\n  name: LogoutPage,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport allActions from '../../../../../store/actions/index';\n\nimport classes from './FormComponent.module.css';\n\nfunction FormComponent() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const dispatch = useDispatch();\n\n  const toSaveTodo = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (title && description) {\n\n      dispatch(allActions.todoActions.addTodo(title, description));\n      setTitle('');\n      setDescription('');\n    }\n  };\n\n  return (\n    <form onSubmit={toSaveTodo} className={classes.addTodoForm}>\n      <input\n        type=\"text\"\n        className={classes.formInput}\n        onChange={(e) => setTitle(e.target.value)}\n        value={title}\n        placeholder=\"Todo title...\"\n        required\n      />\n      <input\n        type=\"text\"\n        className={classes.formInput}\n        onChange={(e) => setDescription(e.target.value)}\n        value={description}\n        placeholder=\"Todo description...\"\n        required\n      />\n      <button className={classes.formButton} type=\"submit\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default FormComponent;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport allActions from '../../../../../store/actions';\nimport { Todo } from '../../../redux/todoReducer';\nimport classes from './TodoTableItem.module.css';\n\ninterface Props {\n  todo: Todo;\n}\n\nfunction TodoTableItem(props: Props) {\n  const [editMode, setEditMode] = useState(false);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n \n  const handleDelete = () => {\n    dispatch(allActions.todoActions.deleteTodo(props.todo.id));\n  };\n\n  const handleEdit = () => {\n    setTitle(props.todo.title);\n    setDescription(props.todo.description);\n    setEditMode(true);\n  };\n\n  const handleSaveChanges = () => {\n    dispatch(\n      allActions.todoActions.saveChanges(props.todo.id, title, description, props.todo.doc, props.todo.completed)\n    );\n    setEditMode(false);\n  };\n\n  const handleToggleCompletion = () => {\n    dispatch(\n      allActions.todoActions.saveChanges(\n        props.todo.id,\n        props.todo.title,\n        props.todo.description,\n        props.todo.doc,\n        !props.todo.completed\n      )\n    )\n  };\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {!editMode ? (\n        <tr className={classes.rowStyling}>\n          <td>\n            <Link to={`/todos/${props.todo.id}`}>{props.todo.title}</Link>\n          </td>\n          <td>{props.todo.description}</td>\n          <td>{props.todo.doc}</td>\n          <td\n            className={classes.completedStyling}\n            onClick={handleToggleCompletion}\n          >\n            {props.todo.completed ? 'True' : 'False'}\n          </td>\n          <td>\n            <button\n              onClick={handleEdit}\n              className={`${classes.btnStyling} ${classes.btnEdit}`}\n            >\n              Edit\n            </button>\n            <button\n              onClick={handleDelete}\n              className={`${classes.btnStyling} ${classes.btnDelete}`}\n            >\n              Delete\n            </button>\n          </td>\n        </tr>\n      ) : (\n          <tr className={classes.rowStyling}>\n            <td>\n              <input\n                className={classes.inputStyling}\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n              />\n            </td>\n            <td>\n              <input\n                className={classes.inputStyling}\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              />\n            </td>\n            <td>{props.todo.doc}</td>\n            <td>{props.todo.completed ? 'True' : 'False'}</td>\n            <td>\n              <button\n                onClick={handleSaveChanges}\n                className={`${classes.btnStyling} ${classes.btnEdit}`}\n              >\n                Save\n            </button>\n            </td>\n          </tr>\n        )}\n    </>\n  );\n}\n\nexport default TodoTableItem;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormComponent from './models/FormComponent';\nimport TodoTableItem from './models/TodoTableItem';\nimport classes from './TodoList.module.css';\nimport { RootReducer } from '../../../../store/reducers';\nimport { Todo } from '../../redux/todoReducer';\nimport allActions from '../../../../store/actions';\nimport firebase from '../../../../firebase';\n\n\nfunction TodoList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const db = firebase.firestore()\n    return db.collection('todos').onSnapshot((snapshot) => {\n      const todosData: Todo[] = []\n      snapshot.forEach(doc => todosData.push(({\n        title: doc.data().title,\n        id: doc.id,\n        description: doc.data().description,\n        doc: doc.data().doc,\n        completed: doc.data().completed\n      })))\n      dispatch(allActions.todoActions.setTodos(todosData));\n    })\n  }, [dispatch])\n\n  const todos: Todo[] = useSelector<RootReducer, Todo[]>(\n    (state) => state.todoReducer.todos\n  );\n\n  const [selectfilter, setSelectFilter] = useState('all');\n  const [inputFilter, setInputFilter] = useState('');\n  const [filterFn, setFilterFn] = useState({\n    fn: (todos: Todo[]) => {\n      return todos;\n    },\n  });\n  const [sortFilter, setSortFilter] = useState('');\n\n  const handleFiltering = (iFil: string, sFil: string) => {\n    setInputFilter(iFil);\n    setSelectFilter(sFil);\n    setFilterFn({\n      fn: (todos: Todo[]) => {\n        if (sFil === 'all' && !iFil) {\n          return todos;\n        } else if (sFil === 'all' && iFil) {\n          return todos.filter((todo: Todo) => {\n            return (\n              todo.title.toLowerCase().includes(iFil.trim().toLowerCase()) ||\n              todo.description.toLowerCase().includes(iFil.trim().toLowerCase())\n            );\n          });\n        } else if (sFil === 'active' && !iFil) {\n          return todos.filter((todo: Todo) => todo.completed === false);\n        } else if (sFil === 'active' && iFil) {\n          return todos.filter((todo: Todo) => {\n            return (\n              (todo.title.toLowerCase().includes(iFil.trim().toLowerCase()) ||\n                todo.description\n                  .toLowerCase()\n                  .includes(iFil.trim().toLowerCase())) &&\n              todo.completed === false\n            );\n          });\n        } else if (sFil === 'finished' && !iFil) {\n          return todos.filter((todo: Todo) => todo.completed === true);\n        } else {\n          return todos.filter((todo: Todo) => {\n            return (\n              (todo.title.toLowerCase().includes(iFil.trim().toLowerCase()) ||\n                todo.description\n                  .toLowerCase()\n                  .includes(iFil.trim().toLowerCase())) &&\n              todo.completed === true\n            );\n          });\n        }\n      },\n    });\n  };\n\n  const todosAfterFilteringAndSorting = () => {\n    return sortFunction(filterFn.fn(todos));\n  };\n\n  const sortFunction = (array: Todo[]) => {\n    if (sortFilter === '') return array;\n\n    return array.sort(function (a: Todo, b: Todo) {\n      const firstDate = a.doc.split('.').reverse().join();\n      const secondDate = b.doc.split('.').reverse().join();\n      if (sortFilter === 'asc') {\n        return firstDate < secondDate ? -1 : firstDate > secondDate ? 1 : 0;\n      }\n      return firstDate > secondDate ? -1 : firstDate < secondDate ? 1 : 0;\n    });\n  };\n\n  const searchForm = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className={classes.center}>\n      <header className={classes.heder}>\n        <h1>Todo's list</h1>\n      </header>\n      <FormComponent />\n\n      <form className={classes.formStyle} onSubmit={searchForm}>\n        <input\n          className={classes.singleInput}\n          type=\"text\"\n          onChange={(e) => {\n            handleFiltering(e.target.value, selectfilter);\n          }}\n          placeholder=\"Search...\"\n        />\n\n        <div className={classes.selStyle}>\n          <select\n            name=\"todos\"\n            className={classes.selectorStyle}\n            onChange={(e) => {\n              handleFiltering(inputFilter, e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"finished\">Finished</option>\n          </select>\n        </div>\n      </form>\n\n      <table className={classes.tableClass}>\n        <thead className={classes.tableHead}>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th\n              className={classes.dateSort}\n              onClick={() =>\n                sortFilter === 'asc'\n                  ? setSortFilter('desc')\n                  : setSortFilter('asc')\n              }\n            >\n              Date\n            </th>\n            <th>Completed</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todosAfterFilteringAndSorting().length ? (\n            todosAfterFilteringAndSorting().map((todo: Todo) => {\n              return <TodoTableItem todo={todo} key={todo.id} />;\n            })\n          ) : (\n              <tr>\n                <td colSpan={4}>No todos yet</td>\n              </tr>\n            )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '/todos',\n    component: TodoList,\n  },\n  name: TodoList,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { RootReducer } from '../../../../store/reducers';\nimport { Todo } from '../../redux/todoReducer';\nimport classes from './SingleTodo.module.css';\n\ninterface ParamTypes {\n  todo_id: string;\n}\n\nfunction SingleTodo() {\n  const { todo_id } = useParams<ParamTypes>();\n  const todo: Todo = useSelector<RootReducer, Todo>(\n    (state) =>\n      state.todoReducer.todos.find((todo: Todo) => todo.id === todo_id)!\n  );\n\n  return (\n    <>\n      {todo ? (\n        <section className={classes.singleTodo}>\n          <h1>Todo</h1>\n          <p>Title: {todo.title}</p>\n          <p>Description: {todo.description}</p>\n          <p>Date: {todo.doc}</p>\n          <p>Completion: {todo.completed ? 'Finished' : 'Not Finished'}</p>\n          <Link to=\"/todos\">\n            <button className={classes.goHomeBtn}>Go back</button>\n          </Link>\n        </section>\n      ) : (\n        <section className={classes.singleTodo}>\n          <h1>Uuuups, we have lost that todo</h1>\n          <Link to=\"/\">\n            <button className={classes.goHomeBtn}>Go home</button>\n          </Link>\n        </section>\n      )}\n    </>\n  );\n}\n\nexport default {\n  routeProps: {\n    path: '/todos/:todo_id',\n    component: SingleTodo,\n  },\n  name: SingleTodo,\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport HomePage from '../HomePage/HomePage';\nimport SignIn from '../auth/components/SignIn/SignIn';\nimport SignUp from '../auth/components/SignUp/SignUp';\nimport LogoutPage from '../auth/components/Logout/LogoutPage';\nimport TodoList from '../todos-module/components/Todos/TodoList';\nimport SingleTodo from '../todos-module/components/SingleTodo/SingleTodo';\nimport { useSelector } from 'react-redux';\nimport { RootReducer } from '../../store/reducers';\n\nconst RoutesComponent = () => {\n  const isAuth: boolean = useSelector<RootReducer, boolean>(\n    (state) => state.userReducer.isAuthenticated\n  );\n\n  return (\n    <Switch>\n      <Route exact {...HomePage.routeProps} />\n      {!isAuth && <Route {...SignIn.routeProps} />}\n      {!isAuth && <Route {...SignUp.routeProps} />}\n      {isAuth && <Route {...SingleTodo.routeProps} />}\n      {isAuth && <Route {...TodoList.routeProps} />}\n      {isAuth && <Route {...LogoutPage.routeProps} />}\n      <Route {...ErrorPage.routeProps} />\n    </Switch>\n  );\n};\n\nexport default RoutesComponent;\n","import React from 'react';\nimport './App.css';\n\nimport NavigationComponent from './modules/Navigation/NavigationComponent';\nimport RoutesComponent from './modules/Routes/RoutesComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavigationComponent />\n      <RoutesComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export interface State {\n  todos: Todo[];\n}\n\nexport interface Todo {\n  id: string;\n  title: string;\n  description: string;\n  doc: string;\n  completed: boolean;\n}\n\nconst initialState = {\n  todos: [\n  ],\n};\n\ntype Action = { type: string; id: string; title: string; description: string, todos:any, doc: string };\n\nconst todosReducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'SET_TODOS':\n      return {\n        ...state,\n        todos: action.todos\n      }\n\n    /* case 'DELETE_TODO':\n      const newTodos = state.todos.filter((todo) => {\n        return action.id !== todo.id;\n      });\n      return {\n        ...state,\n        todos: newTodos,\n      };\n\n    case 'SAVE_CHANGES':\n      const updatedTodos = state.todos.map((todo) =>\n        todo.id === action.id\n          ? { ...todo, title: action.title, description: action.description }\n          : todo\n      );\n\n      return {\n        ...state,\n        todos: updatedTodos,\n      };\n\n    case 'TOGGLE_COMPLETION':\n      const changeStatusofTodo = state.todos.map((todo) =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n\n      return {\n        ...state,\n        todos: changeStatusofTodo,\n      }; */\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","export interface UserState {\n  isAuthenticated: boolean;\n}\n\nconst initialState = {\n  isAuthenticated: false,\n};\n\ntype Action = { type: string };\n\nconst userReducer = (state: UserState = initialState, action: Action) => {\n  switch (action.type) {\n    case 'VALID_AUTH':\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n\n    case 'AUTH_START':\n      return {\n        ...state\n      }\n\n    case 'AUTH_SUCCESS':\n      console.log(\"Auth success\")\n      return {\n        ...state\n      }\n\n    case 'AUTH_FAIL':\n      console.log('auth fail')\n      return {\n        ...state\n      }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import todoReducer, {\n  State,\n} from '../../modules/todos-module/redux/todoReducer';\nimport userReducer, { UserState } from '../../modules/auth/redux/userReducer';\nimport { combineReducers } from 'redux';\n\nexport interface RootReducer {\n  todoReducer: State;\n  userReducer: UserState;\n}\n\nconst rootReducer = combineReducers({\n  todoReducer,\n  userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}